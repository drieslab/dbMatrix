% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate.R
\name{sim_duckdb}
\alias{sim_duckdb}
\alias{sim_dgc}
\alias{sim_denseMat}
\alias{sim_ijx_matrix}
\alias{sim_dbDataFrame}
\alias{sim_dbSparseMatrix}
\alias{sim_dbDenseMatrix}
\title{sim_dgc}
\usage{
sim_duckdb(value = datasets::iris, name = "test", con = NULL, memory = TRUE)

sim_dgc(num_rows = 50, num_cols = 50, n_vals = 50)

sim_denseMat(num_rows = 50, num_cols = 50)

sim_ijx_matrix(mat_type = NULL, num_rows = 50, num_cols = 50, seed_num = 42)

sim_dbDataFrame(value = NULL, name = "df_test", key = NA_character_)

sim_dbSparseMatrix(
  num_rows = 50,
  num_cols = 50,
  seed_num = 42,
  name = "sparse_test",
  memory = FALSE
)

sim_dbDenseMatrix(
  num_rows = 50,
  num_cols = 50,
  seed_num = 42,
  name = "dense_test",
  memory = FALSE
)
}
\arguments{
\item{num_rows}{The number of rows in the matrix (default: 50)}

\item{num_cols}{The number of columns in the matrix (default: 50)}

\item{seed_num}{The seed number for reproducibility (default: 42)}
}
\value{
A dgCMatrix object
}
\description{
Simulate a dbSparseMatrix in memory

Simulate a dbDenseMatrix in memory.
}
\details{
This function generates a simulated sparse matrix (dgCMatrix) with number
of rows and columns and sets n_vals random values to a non-zero value.

This function generates a simulated dense matrix object with a specified number
of rows and columns.

This function generates an ijx representation of a simulated dgCMatrix object
with a specified number of rows and columns and sets 50 random values to
a non-zero value.
}
\section{Functions}{
\itemize{
\item \code{sim_duckdb()}: Simulate a duckdb connection dplyr tbl_Pool in memory

\item \code{sim_dgc()}: Simulate a dgcMatrix

\item \code{sim_denseMat()}: Simulate a dgcMatrix

\item \code{sim_ijx_matrix()}: Simulate a duckdb connection dplyr tbl_Pool in memory

\item \code{sim_dbDataFrame()}: Simulate a dbDataFrame in memory

\item \code{sim_dbSparseMatrix()}: Simulate a dbSparseMatrix in memory

\item \code{sim_dbDenseMatrix()}: Simulate a dbSparseMatrix in memory

}}
\examples{
sim_ijx_matrix()

}
\keyword{internal}
