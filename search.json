[{"path":"https://drieslab.github.io/dbMatrix/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://drieslab.github.io/dbMatrix/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://drieslab.github.io/dbMatrix/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://drieslab.github.io/dbMatrix/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://drieslab.github.io/dbMatrix/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://drieslab.github.io/dbMatrix/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://drieslab.github.io/dbMatrix/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://drieslab.github.io/dbMatrix/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://drieslab.github.io/dbMatrix/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://drieslab.github.io/dbMatrix/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://drieslab.github.io/dbMatrix/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://drieslab.github.io/dbMatrix/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://drieslab.github.io/dbMatrix/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://drieslab.github.io/dbMatrix/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://drieslab.github.io/dbMatrix/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://drieslab.github.io/dbMatrix/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://drieslab.github.io/dbMatrix/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://drieslab.github.io/dbMatrix/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://drieslab.github.io/dbMatrix/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://drieslab.github.io/dbMatrix/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://drieslab.github.io/dbMatrix/articles/arithmetic.html","id":"get-test-data","dir":"Articles","previous_headings":"","what":"Get test data","title":"Arithmetic","text":"test file dgCMatrixor compressed sparse column matrix representing single cell gene expression matrix. file data directory package. Let’s load .rds file preview object. file contains 634 rows 624 columns. rows represent gene names columns represent cell names. values integers represent number times gene detected cell. Like single-cell RNA-seq data, matrix sparse.","code":"dgc <- readRDS(\"../data/dgc.rds\")  dplyr::glimpse(dgc) #> Loading required package: Matrix #>  #> Attaching package: 'Matrix' #> The following object is masked from 'package:dbMatrix': #>  #>     readMM #> Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots #>   ..@ i       : int [1:170625] 0 6 10 17 21 22 25 31 33 35 ... #>   ..@ p       : int [1:625] 0 227 510 758 980 1293 1631 1976 2223 2434 ... #>   ..@ Dim     : int [1:2] 634 624 #>   ..@ Dimnames:List of 2 #>   .. ..$ : chr [1:634] \"Gna12\" \"Ccnd2\" \"Btbd17\" \"Sox9\" ... #>   .. ..$ : chr [1:624] \"AAAGGGATGTAGCAAG-1\" \"AAATGGCATGTCTTGT-1\" \"AAATGGTCAATGTGCC-1\" \"AAATTAACGGGTAGCT-1\" ... #>   ..@ x       : num [1:170625] 1 1 1 1 1 1 6 2 1 1 ... #>   ..@ factors : list()"},{"path":"https://drieslab.github.io/dbMatrix/articles/arithmetic.html","id":"create-a-dbmatrix-object","dir":"Articles","previous_headings":"","what":"Create a dbMatrix object","title":"Arithmetic","text":"Let’s create dbSparseMatrix object dgc object.","code":"# Note: by default the constructor creates a dbMatrix object in-memory con <- DBI::dbConnect(duckdb::duckdb(), \":memory:\")  dbsm <- createDBMatrix(value = dgc,                         con = con,                         name = 'visium',                         class = \"dbSparseMatrix\",                        overwrite = TRUE)  # preview the object dbsm #> connection :  :memory:  #> table name : 'visium' #> 634 x 624  matrix of class \"dbSparseMatrix\" #> [[ Colnames 'AAAGGGATGTAGCAAG-1', 'AAATGGCATGTCTTGT-1', 'AAATGGTCAATGTGCC-1' ... suppressing 618 ...'TTGTCGTTCAGTTACC-1', 'TTGTGGCCCTGACAGT-1', 'TTGTTCAGTGTGCTAC-1' ]] #>                                   #> Gna12         1 2 1 1 9 1 3 5 3 . #> Ccnd2         . 1 1 . . 1 . 1 1 . #> Btbd17        . 1 1 1 . . 2 . . . #>  #> ......suppressing 614 columns and 628 rows #>  #> Gm19935       . 1 . . . . . . . . #> 9630013A20Rik . . . . . . . . . . #> 2900040C04Rik 1 . . . . . . . . 1"},{"path":"https://drieslab.github.io/dbMatrix/articles/arithmetic.html","id":"scalar-arithmetic","dir":"Articles","previous_headings":"","what":"Scalar Arithmetic","title":"Arithmetic","text":"dbMatrix emulates scalar arithmetic Matrix package. Note: Addition subtraction non-zero addends dbSparseMatrix results dbDenseMatrix.","code":"dbsm + 1 #> Warning in toDbDense(dbm): Densifying dbSparseMatrix on the fly. See #> ?precompute to speed up densification. #> connection :  :memory:  #> table name : 'visium' #> 634 x 624  matrix of class \"dbDenseMatrix\" #> [[ Colnames 'AAAGGGATGTAGCAAG-1', 'AAATGGCATGTCTTGT-1', 'AAATGGTCAATGTGCC-1' ... suppressing 618 ...'TTGTCGTTCAGTTACC-1', 'TTGTGGCCCTGACAGT-1', 'TTGTTCAGTGTGCTAC-1' ]] #>      1         2         3      …       622       623       624    #> 1 1e+00 1e+00 1e+00    …    1e+00 1e+00 1e+00 #> 2 1e+00 1e+00 1e+00    …    1e+00 1e+00 1e+00 #> 3 1e+00 1e+00 1e+00    …    1e+00 1e+00 1e+00 #> ⋮    ⋮        ⋮        ⋮     ⋮       ⋮        ⋮        ⋮   #> 632 1e+00 1e+00 1e+00   …    1e+00 1e+00 1e+00 #> 633 1e+00 1e+00 1e+00   …    1e+00 1e+00 1e+00 #> 634 1e+00 1e+00 1e+00   …    1e+00 1e+00 1e+00  dbsm * 100 #> connection :  :memory:  #> table name : 'visium' #> 634 x 624  matrix of class \"dbSparseMatrix\" #> [[ Colnames 'AAAGGGATGTAGCAAG-1', 'AAATGGCATGTCTTGT-1', 'AAATGGTCAATGTGCC-1' ... suppressing 618 ...'TTGTCGTTCAGTTACC-1', 'TTGTGGCCCTGACAGT-1', 'TTGTTCAGTGTGCTAC-1' ]] #>                                                       #> Gna12         100 200 100 100 900 100 300 500 300   . #> Ccnd2           . 100 100   .   . 100   . 100 100   . #> Btbd17          . 100 100 100   .   . 200   .   .   . #>  #> ......suppressing 614 columns and 628 rows #>  #> Gm19935         . 100   .   .   .   .   .   .   .   . #> 9630013A20Rik   .   .   .   .   .   .   .   .   .   . #> 2900040C04Rik 100   .   .   .   .   .   .   .   . 100"},{"path":"https://drieslab.github.io/dbMatrix/articles/arithmetic.html","id":"matrix-arithmetic","dir":"Articles","previous_headings":"","what":"Matrix Arithmetic","title":"Arithmetic","text":"dbMatrix also supports matrix arithmetic dbMatrix objects conformable.","code":"dbsm + dbsm #> connection :  :memory:  #> table name : 'visium' #> 634 x 624  matrix of class \"dbSparseMatrix\" #> [[ Colnames 'AAAGGGATGTAGCAAG-1', 'AAATGGCATGTCTTGT-1', 'AAATGGTCAATGTGCC-1' ... suppressing 618 ...'TTGTCGTTCAGTTACC-1', 'TTGTGGCCCTGACAGT-1', 'TTGTTCAGTGTGCTAC-1' ]] #>                                     #> Gna12         2 4 2 2 18 2 6 10 6 . #> Ccnd2         . 2 2 .  . 2 .  2 2 . #> Btbd17        . 2 2 2  . . 4  . . . #>  #> ......suppressing 614 columns and 628 rows #>  #> Gm19935       . 2 . .  . . .  . . . #> 9630013A20Rik . . . .  . . .  . . . #> 2900040C04Rik 2 . . .  . . .  . . 2"},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/articles/arithmetic.html","id":"hadamard-product","dir":"Articles","previous_headings":"Matrix Multiplication","what":"Hadamard product","title":"Arithmetic","text":"","code":"dbsm * dbsm #> connection :  :memory:  #> table name : 'visium' #> 634 x 624  matrix of class \"dbSparseMatrix\" #> [[ Colnames 'AAAGGGATGTAGCAAG-1', 'AAATGGCATGTCTTGT-1', 'AAATGGTCAATGTGCC-1' ... suppressing 618 ...'TTGTCGTTCAGTTACC-1', 'TTGTGGCCCTGACAGT-1', 'TTGTTCAGTGTGCTAC-1' ]] #>                                     #> Gna12         1 4 1 1 81 1 9 25 9 . #> Ccnd2         . 1 1 .  . 1 .  1 1 . #> Btbd17        . 1 1 1  . . 4  . . . #>  #> ......suppressing 614 columns and 628 rows #>  #> Gm19935       . 1 . .  . . .  . . . #> 9630013A20Rik . . . .  . . .  . . . #> 2900040C04Rik 1 . . .  . . .  . . 1"},{"path":"https://drieslab.github.io/dbMatrix/articles/arithmetic.html","id":"matrix-product","dir":"Articles","previous_headings":"Matrix Multiplication","what":"Matrix product","title":"Arithmetic","text":"TODO","code":""},{"path":"https://drieslab.github.io/dbMatrix/articles/arithmetic.html","id":"shutdown","dir":"Articles","previous_headings":"","what":"Shutdown","title":"Arithmetic","text":"","code":"dbMatrix::dbDisconnect(dbsm, shutdown = TRUE)"},{"path":"https://drieslab.github.io/dbMatrix/articles/arithmetic.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Arithmetic","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] Matrix_1.7-0          dbMatrix_0.0.0.9021   MatrixGenerics_1.16.0 #> [4] matrixStats_1.3.0     #>  #> loaded via a namespace (and not attached): #>  [1] bit_4.0.5         jsonlite_1.8.8    crayon_1.5.3      dplyr_1.1.4       #>  [5] compiler_4.4.1    tidyselect_1.2.1  blob_1.2.4        jquerylib_0.1.4   #>  [9] systemfonts_1.1.0 textshaping_0.4.0 yaml_2.3.9        fastmap_1.2.0     #> [13] lattice_0.22-6    R6_2.5.1          generics_0.1.3    knitr_1.48        #> [17] tibble_3.2.1      desc_1.4.3        DBI_1.2.3         bslib_0.7.0       #> [21] pillar_1.9.0      rlang_1.1.4       utf8_1.2.4        cachem_1.1.0      #> [25] xfun_0.45         fs_1.6.4          sass_0.4.9        bit64_4.0.5       #> [29] cli_3.6.3         withr_3.0.0       pkgdown_2.1.0     magrittr_2.0.3    #> [33] digest_0.6.36     grid_4.4.1        dbplyr_2.5.0      lifecycle_1.0.4   #> [37] vctrs_0.6.5       evaluate_0.24.0   glue_1.7.0        data.table_1.15.4 #> [41] duckdb_1.0.0-1    ragg_1.3.2        fansi_1.0.6       purrr_1.0.2       #> [45] rmarkdown_2.27    tools_4.4.1       pkgconfig_2.0.3   htmltools_0.5.8.1"},{"path":"https://drieslab.github.io/dbMatrix/articles/operations.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Operations","text":"vignette introduces generic functions operations supported dbMatrix.","code":""},{"path":"https://drieslab.github.io/dbMatrix/articles/operations.html","id":"loading-library","dir":"Articles","previous_headings":"","what":"Loading library","title":"Operations","text":"","code":"library(dbMatrix) library(Matrix)"},{"path":"https://drieslab.github.io/dbMatrix/articles/operations.html","id":"dbmatrix-generics","dir":"Articles","previous_headings":"","what":"dbMatrix generics","title":"Operations","text":"dbMatrix subclasses currently support basic generic functions listed support operations coming soon.","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/articles/operations.html","id":"get-test-data","dir":"Articles","previous_headings":"dbSparse Matrix Operations","what":"Get test data","title":"Operations","text":"test file dgCMatrixor compressed sparse column matrix representing single cell gene expression matrix. file data directory package. Let’s load .rds file preview object.","code":"dgc <- readRDS(\"../data/dgc.rds\")  dplyr::glimpse(dgc) ## Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots ##   ..@ i       : int [1:170625] 0 6 10 17 21 22 25 31 33 35 ... ##   ..@ p       : int [1:625] 0 227 510 758 980 1293 1631 1976 2223 2434 ... ##   ..@ Dim     : int [1:2] 634 624 ##   ..@ Dimnames:List of 2 ##   .. ..$ : chr [1:634] \"Gna12\" \"Ccnd2\" \"Btbd17\" \"Sox9\" ... ##   .. ..$ : chr [1:624] \"AAAGGGATGTAGCAAG-1\" \"AAATGGCATGTCTTGT-1\" \"AAATGGTCAATGTGCC-1\" \"AAATTAACGGGTAGCT-1\" ... ##   ..@ x       : num [1:170625] 1 1 1 1 1 1 6 2 1 1 ... ##   ..@ factors : list() # create dbSparseMatrix from the same dgc con <- DBI::dbConnect(duckdb::duckdb(), \":memory:\")  sparse <- createDBMatrix(value = dgc,                           con = con,                           name = 'visium',                           class = \"dbSparseMatrix\",                          overwrite = TRUE)  # preview  # show function aims to emulate the show method for dgCMatrix head(sparse) ## connection :  :memory:  ## table name : 'visium' ## 6 x 624  matrix of class \"dbSparseMatrix\" ## [[ Colnames 'AAAGGGATGTAGCAAG-1', 'AAATGGCATGTCTTGT-1', 'AAATGGTCAATGTGCC-1' ... suppressing 618 ...'TTGTCGTTCAGTTACC-1', 'TTGTGGCCCTGACAGT-1', 'TTGTTCAGTGTGCTAC-1' ]] ##                                   ## Gna12         1 2 1 1 9 1 3 5 3 . ##  [ reached getOption(\"max.print\") -- omitted 633 rows ]"},{"path":"https://drieslab.github.io/dbMatrix/articles/operations.html","id":"transpose","dir":"Articles","previous_headings":"dbSparse Matrix Operations","what":"transpose","title":"Operations","text":"","code":"dbMatrix::t(sparse) ## connection :  :memory:  ## table name : 'visium' ## 624 x 634  matrix of class \"dbSparseMatrix\" ## [[ Colnames 'Gna12', 'Ccnd2', 'Btbd17' ... suppressing 628 ...'Gm19935', '9630013A20Rik', '2900040C04Rik' ]] ##                                        ## AAAGGGATGTAGCAAG-1 1 . . . . . 1 . . . ##  [ reached getOption(\"max.print\") -- omitted 5 rows ] ## NA ##  ## ......suppressing 624 columns and 618 rows ##  ## NA ## NA ## NA"},{"path":"https://drieslab.github.io/dbMatrix/articles/operations.html","id":"colmeans","dir":"Articles","previous_headings":"dbSparse Matrix Operations","what":"colMeans","title":"Operations","text":"","code":"dbMatrix::colMeans(sparse) ## AAAGGGATGTAGCAAG-1 AAATGGCATGTCTTGT-1 AAATGGTCAATGTGCC-1 AAATTAACGGGTAGCT-1  ##          0.7413249          1.3296530          1.1435331          0.8343849  ## AACAACTGGTAGTTGC-1 AACAGGAAATCGAATA-1 AACAGGATGGGCCGCG-1 AACCATGGGATCGCTA-1  ##          1.6135647          2.2129338          1.7223975          1.9022082  ## AACCCAGAGACGGAGA-1 AACCGAGCTTGGTCAT-1  ##          0.7397476          0.9258675  ##  [ reached getOption(\"max.print\") -- omitted 614 entries ]"},{"path":"https://drieslab.github.io/dbMatrix/articles/operations.html","id":"colsums","dir":"Articles","previous_headings":"dbSparse Matrix Operations","what":"colSums","title":"Operations","text":"","code":"dbMatrix::colSums(sparse) ## AAAGGGATGTAGCAAG-1 AAATGGCATGTCTTGT-1 AAATGGTCAATGTGCC-1 AAATTAACGGGTAGCT-1  ##                470                843                725                529  ## AACAACTGGTAGTTGC-1 AACAGGAAATCGAATA-1 AACAGGATGGGCCGCG-1 AACCATGGGATCGCTA-1  ##               1023               1403               1092               1206  ## AACCCAGAGACGGAGA-1 AACCGAGCTTGGTCAT-1  ##                469                587  ##  [ reached getOption(\"max.print\") -- omitted 614 entries ]"},{"path":"https://drieslab.github.io/dbMatrix/articles/operations.html","id":"rowmeans","dir":"Articles","previous_headings":"dbSparse Matrix Operations","what":"rowMeans","title":"Operations","text":"","code":"dbMatrix::rowMeans(sparse) ##     Gna12     Ccnd2    Btbd17      Sox9      Sez6  Serpinf1    S100a6    Col1a1  ## 2.7179487 1.7323718 0.5528846 0.8766026 4.4679487 0.3092949 1.6522436 0.1185897  ##       Vwf      Esam  ## 0.6346154 0.4391026  ##  [ reached getOption(\"max.print\") -- omitted 624 entries ]"},{"path":"https://drieslab.github.io/dbMatrix/articles/operations.html","id":"rowsums","dir":"Articles","previous_headings":"dbSparse Matrix Operations","what":"rowSums","title":"Operations","text":"","code":"dbMatrix::rowSums(sparse) ##    Gna12    Ccnd2   Btbd17     Sox9     Sez6 Serpinf1   S100a6   Col1a1  ##     1696     1081      345      547     2788      193     1031       74  ##      Vwf     Esam  ##      396      274  ##  [ reached getOption(\"max.print\") -- omitted 624 entries ]"},{"path":"https://drieslab.github.io/dbMatrix/articles/operations.html","id":"dim","dir":"Articles","previous_headings":"dbSparse Matrix Operations","what":"dim","title":"Operations","text":"","code":"dim(sparse) ## [1] 634 624 dim(dgc) ## [1] 634 624"},{"path":"https://drieslab.github.io/dbMatrix/articles/operations.html","id":"check-results-are-equivalent","dir":"Articles","previous_headings":"dbSparse Matrix Operations","what":"Check results are equivalent","title":"Operations","text":"","code":"all.equal(dbMatrix::colMeans(sparse), Matrix::colMeans(dgc)) ## [1] TRUE all.equal(dbMatrix::colSums(sparse), Matrix::colSums(dgc)) ## [1] TRUE all.equal(dbMatrix::rowMeans(sparse), Matrix::rowMeans(dgc)) ## [1] TRUE all.equal(dbMatrix::rowSums(sparse), Matrix::rowSums(dgc)) ## [1] TRUE"},{"path":"https://drieslab.github.io/dbMatrix/articles/operations.html","id":"dbdensematrix-operations","dir":"Articles","previous_headings":"","what":"dbDenseMatrix Operations","title":"Operations","text":"","code":"# below is a convenience function to simulate a dbDenseMatrix dense = dbMatrix::sim_dbDenseMatrix()  # preview dense ## connection :  /tmp/RtmpMqGvht/file2228112b0dda.duckdb  ## table name : 'dense_test' ## 50 x 50  matrix of class \"dbDenseMatrix\" ##      1         2         3      …       48        49        50     ## 1  1.4e+00  3.2e-01  1.2e+00    …     2.2e-01  1.3e+00 -3.9e-01 ## 2 -5.6e-01 -7.8e-01  1.0e+00    …    -1.1e-01 -6.0e-01 -9.9e-02 ## 3  3.6e-01  1.6e+00 -1.0e+00    …     2.0e-02  5.7e-02 -2.8e-02 ## ⋮    ⋮        ⋮        ⋮     ⋮       ⋮        ⋮        ⋮   ## 48  1.4e+00 -1.5e+00 -4.3e-01   …    -7.4e-02 -3.5e-02  7.0e-01 ## 49 -4.3e-01  8.0e-02  7.0e-01   …    -7.7e-01 -9.2e-01 -1.4e-01 ## 50  6.6e-01  6.5e-01 -1.1e+00   …     5.9e-01  1.1e+00  5.0e-01"},{"path":"https://drieslab.github.io/dbMatrix/articles/operations.html","id":"transpose-1","dir":"Articles","previous_headings":"dbDenseMatrix Operations","what":"transpose","title":"Operations","text":"","code":"dbMatrix::t(dense) ## connection :  /tmp/RtmpMqGvht/file2228112b0dda.duckdb  ## table name : 'dense_test' ## 50 x 50  matrix of class \"dbDenseMatrix\" ## [[ Colnames 'row1', 'row2', 'row3' ... suppressing 44 ...'row48', 'row49', 'row50' ]] ##      1         2         3      …       48        49        50     ## 1  1.4e+00 -5.6e-01  3.6e-01    …     1.4e+00 -4.3e-01  6.6e-01 ## 2  3.2e-01 -7.8e-01  1.6e+00    …    -1.5e+00  8.0e-02  6.5e-01 ## 3  1.2e+00  1.0e+00 -1.0e+00    …    -4.3e-01  7.0e-01 -1.1e+00 ## ⋮    ⋮        ⋮        ⋮     ⋮       ⋮        ⋮        ⋮   ## 48  2.2e-01 -1.1e-01  2.0e-02   …    -7.4e-02 -7.7e-01  5.9e-01 ## 49  1.3e+00 -6.0e-01  5.7e-02   …    -3.5e-02 -9.2e-01  1.1e+00 ## 50 -3.9e-01 -9.9e-02 -2.8e-02   …     7.0e-01 -1.4e-01  5.0e-01"},{"path":"https://drieslab.github.io/dbMatrix/articles/operations.html","id":"colmeans-1","dir":"Articles","previous_headings":"dbDenseMatrix Operations","what":"colMeans","title":"Operations","text":"","code":"dbMatrix::colMeans(dense) ##         col1         col2         col3         col4         col5         col6  ## -0.035671782  0.100701413 -0.151251089 -0.023716326  0.007939877 -0.028676220  ##         col7         col8         col9        col10  ## -0.061541347  0.127414276 -0.119421148 -0.116239863  ##  [ reached getOption(\"max.print\") -- omitted 40 entries ]"},{"path":"https://drieslab.github.io/dbMatrix/articles/operations.html","id":"colsums-1","dir":"Articles","previous_headings":"dbDenseMatrix Operations","what":"colSums","title":"Operations","text":"","code":"dbMatrix::colSums(dense) ##       col1       col2       col3       col4       col5       col6       col7  ## -1.7835891  5.0350707 -7.5625544 -1.1858163  0.3969938 -1.4338110 -3.0770674  ##       col8       col9      col10  ##  6.3707138 -5.9710574 -5.8119931  ##  [ reached getOption(\"max.print\") -- omitted 40 entries ]"},{"path":"https://drieslab.github.io/dbMatrix/articles/operations.html","id":"rowmeans-1","dir":"Articles","previous_headings":"dbDenseMatrix Operations","what":"rowMeans","title":"Operations","text":"","code":"dbMatrix::rowMeans(dense) ##         row1         row2         row3         row4         row5         row6  ##  0.053643638  0.002494642  0.031334034  0.093889009 -0.048311439 -0.047287825  ##         row7         row8         row9        row10  ##  0.092209664 -0.023069981  0.096433464 -0.093495713  ##  [ reached getOption(\"max.print\") -- omitted 40 entries ]"},{"path":"https://drieslab.github.io/dbMatrix/articles/operations.html","id":"rowsums-1","dir":"Articles","previous_headings":"dbDenseMatrix Operations","what":"rowSums","title":"Operations","text":"","code":"dbMatrix::rowSums(dense) ##       row1       row2       row3       row4       row5       row6       row7  ##  2.6821819  0.1247321  1.5667017  4.6944505 -2.4155720 -2.3643912  4.6104832  ##       row8       row9      row10  ## -1.1534990  4.8216732 -4.6747857  ##  [ reached getOption(\"max.print\") -- omitted 40 entries ]"},{"path":"https://drieslab.github.io/dbMatrix/articles/operations.html","id":"mean","dir":"Articles","previous_headings":"dbDenseMatrix Operations","what":"mean","title":"Operations","text":"","code":"dbMatrix::mean(dense) ## [1] -0.009673541"},{"path":"https://drieslab.github.io/dbMatrix/articles/operations.html","id":"dim-1","dir":"Articles","previous_headings":"dbDenseMatrix Operations","what":"dim","title":"Operations","text":"","code":"dim(dense) ## [1] 50 50"},{"path":"https://drieslab.github.io/dbMatrix/articles/operations.html","id":"shutdown","dir":"Articles","previous_headings":"","what":"Shutdown","title":"Operations","text":"","code":"dbMatrix::dbDisconnect(dense, shutdown = TRUE)"},{"path":"https://drieslab.github.io/dbMatrix/articles/operations.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Operations","text":"","code":"sessionInfo() ## R version 4.4.1 (2024-06-14) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 22.04.4 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8    LC_NUMERIC=C        LC_TIME=C.UTF-8     ##  [4] LC_COLLATE=C.UTF-8  LC_MONETARY=C.UTF-8 LC_MESSAGES=C.UTF-8 ##  [7] LC_PAPER=C.UTF-8    LC_NAME=C           LC_ADDRESS=C        ## [10] LC_TELEPHONE=C      ##  [ reached getOption(\"max.print\") -- omitted 2 entries ] ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] Matrix_1.7-0          dbMatrix_0.0.0.9021   MatrixGenerics_1.16.0 ## [4] matrixStats_1.3.0     ##  ## loaded via a namespace (and not attached): ##  [1] jsonlite_1.8.8    crayon_1.5.3      dplyr_1.1.4       compiler_4.4.1    ##  [5] tidyselect_1.2.1  blob_1.2.4        jquerylib_0.1.4   systemfonts_1.1.0 ##  [9] textshaping_0.4.0 yaml_2.3.9        ##  [ reached getOption(\"max.print\") -- omitted 36 entries ]"},{"path":"https://drieslab.github.io/dbMatrix/articles/overview.html","id":"dbmatrix","dir":"Articles","previous_headings":"","what":"dbMatrix","title":"Overview","text":"dbMatrix core package dbverse library inherits dbData base class consists two subclasses, dbSparseMatrix dbDenseMatrix. dbMatrix objects emulate -memory dense sparse matrices embedded database powered DuckDB.","code":""},{"path":"https://drieslab.github.io/dbMatrix/articles/overview.html","id":"dbsparsematrix","dir":"Articles","previous_headings":"","what":"dbSparseMatrix","title":"Overview","text":"Sparse matrices represented triplet vectors , j, x numerical vectors. j refer row column indices, respectively, specific x values counts. Note: j vectors one-based following conventions Matrix R package TSparseMatrix class. dbSparseMatrix class stores triplet vector representation associated dimension names dimensions available. none provided, automatically generated factors (enums) row# col# labels rownames colnames, respectively. dbSparseMatrix class contain zeros triplet vector representation. Zero values inferred based provided dimensions. Support compressed sparse column matrices dgCMatrix class Matrix R package currently implemented. information sparse matrices, see wiki article .","code":""},{"path":"https://drieslab.github.io/dbMatrix/articles/overview.html","id":"dbdensematrix","dir":"Articles","previous_headings":"","what":"dbDenseMatrix","title":"Overview","text":"use approach dbSparseMatrix represent dense matrix triplet , j, x vector. difference dbDenseMatrix class consists values matrix, including zeros.","code":""},{"path":"https://drieslab.github.io/dbMatrix/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Edward C. Ruiz. Author. Jiaji George Chen. Author. Ruben Dries. Author, maintainer.","code":""},{"path":"https://drieslab.github.io/dbMatrix/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"C. Ruiz E, George Chen J, Dries R (2024). dbMatrix: dbMatrix. R package version 0.0.0.9021, https://drieslab.github.io/dbMatrix/.","code":"@Manual{,   title = {dbMatrix: dbMatrix},   author = {Edward {C. Ruiz} and Jiaji {George Chen} and Ruben Dries},   year = {2024},   note = {R package version 0.0.0.9021},   url = {https://drieslab.github.io/dbMatrix/}, }"},{"path":"https://drieslab.github.io/dbMatrix/index.html","id":"dbmatrix","dir":"","previous_headings":"","what":"dbMatrix","title":"dbMatrix","text":"dbMatrix core package dbverse library. goal dbMatrix support larger--memory matrix computations.","code":""},{"path":"https://drieslab.github.io/dbMatrix/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"dbMatrix","text":"can install development version dbMatrix Github like :","code":"# install.packages(\"pak\", repos = sprintf(\"https://r-lib.github.io/p/pak/stable/%s/%s/%s\", .Platform$pkgType, R.Version()$os, R.Version()$arch)) pak::pak(\"drieslab/dbMatrix\")"},{"path":"https://drieslab.github.io/dbMatrix/reference/DBI.html","id":null,"dir":"Reference","previous_headings":"","what":"dbDisconnect — dbDisconnect,dbMatrix-method","title":"dbDisconnect — dbDisconnect,dbMatrix-method","text":"dbDisconnect dbListTables","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/DBI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dbDisconnect — dbDisconnect,dbMatrix-method","text":"","code":"# S4 method for class 'dbMatrix' dbDisconnect(x, ...)  # S4 method for class 'dbMatrix' dbListTables(x, ...)"},{"path":"https://drieslab.github.io/dbMatrix/reference/castNumeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a column to numeric — castNumeric","title":"Set a column to numeric — castNumeric","text":"Sets column numeric first checking column data type. nothing column already double precaution avoid truncation values.","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/castNumeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a column to numeric — castNumeric","text":"","code":"# S4 method for class 'dbData,character' castNumeric(x, col, ...)  # S4 method for class 'dbMatrix,missing' castNumeric(x, col, ...)"},{"path":"https://drieslab.github.io/dbMatrix/reference/castNumeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a column to numeric — castNumeric","text":"x dbData data object col column cast numeric ... additional params pass","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/colTypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Column data types of dbData objects — colTypes","title":"Column data types of dbData objects — colTypes","text":"Get column data types objects inherit 'dbData'","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/colTypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Column data types of dbData objects — colTypes","text":"","code":"# S4 method for class 'dbData' colTypes(x, ...)"},{"path":"https://drieslab.github.io/dbMatrix/reference/colTypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Column data types of dbData objects — colTypes","text":"x dbData data object ... additional params pass","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/createDBMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a sparse or dense dbMatrix object — createDBMatrix","title":"Create a sparse or dense dbMatrix object — createDBMatrix","text":"Create S4 dbMatrix object sparse dense triplet vector format.","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/createDBMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a sparse or dense dbMatrix object — createDBMatrix","text":"","code":"createDBMatrix(   value,   class = NULL,   con = NULL,   overwrite = FALSE,   name = \"dbMatrix\",   dims = NULL,   dim_names = NULL,   mtx_rowname_file_path,   mtx_rowname_col_idx = 1,   mtx_colname_file_path,   mtx_colname_col_idx = 1,   ... )"},{"path":"https://drieslab.github.io/dbMatrix/reference/createDBMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a sparse or dense dbMatrix object — createDBMatrix","text":"value data added database. See details supported data types (required) class class dbMatrix: dbDenseMatrix dbSparseMatrix (required) con DBI duckdb connection object (required) overwrite whether overwrite table already exists database (required) name table name assign within database (optional, default: \"dbMatrix\") dims dimensions matrix (optional: [int, int]) dim_names dimension names matrix (optional: list(enum, enum)) mtx_rowname_file_path path .mtx rowname file read (optional) database. default, header assumed. mtx_rowname_col_idx column index row name file (optional) mtx_colname_file_path path .mtx colname file read database. default, header assumed. (optional) mtx_colname_col_idx column index column name file (optional) ... additional params pass","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/createDBMatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a sparse or dense dbMatrix object — createDBMatrix","text":"function reads data pre-existing DuckDB database. Based name db_path lazy connection made downstream dbMatrix initialization. Supported value data types: dgCMatrix -memory sparse matrix Matrix package dgTMatrix -memory triplet vector COO matrix matrix -memory dense matrix base R .mtx Path .mtx file (TODO) .csv Path .csv file (TODO) tbl_duckdb_connection Table DuckDB database ijx format  existing dbMatrix object. dims dim_names must  specified value tbl_duckdb_connection.","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/createDBMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a sparse or dense dbMatrix object — createDBMatrix","text":"","code":"dgc <- dbMatrix:::sim_dgc() #> Error in as(data, \"dgCMatrix\"): no method or default for coercing “matrix” to “dgCMatrix” dbSparse <- createDBMatrix(value = dgc, db_path = \":memory:\",                            name = \"sparse_matrix\", class = \"dbSparseMatrix\",                            overwrite = TRUE) #> Error in eval(expr, envir, enclos): object 'dgc' not found dbSparse #> Error in eval(expr, envir, enclos): object 'dbSparse' not found"},{"path":"https://drieslab.github.io/dbMatrix/reference/dbDataFrame-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 dbDataFrame class — dbDataFrame-class","title":"S4 dbDataFrame class — dbDataFrame-class","text":"Representation dataframes using -disk database. object used connection single table exists within database.","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/dbDataFrame-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 dbDataFrame class — dbDataFrame-class","text":"data dplyr tbl represents database data hash unique hash ID backend remote_name name table within database contains data key column set key ordering subsetting ","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/dbDenseMatrix-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 Class for dbDenseMatrix — dbDenseMatrix-class","title":"S4 Class for dbDenseMatrix — dbDenseMatrix-class","text":"Representation dense matrices using -disk database. Inherits dbMatrix.","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/dbDenseMatrix-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 Class for dbDenseMatrix — dbDenseMatrix-class","text":"data dense ijx dataframe/tibble","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/dbMatrix-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 dbMatrix class — dbMatrix-class","title":"S4 dbMatrix class — dbMatrix-class","text":"Representation sparse matrices using -disk database. object used connection single table exists within database.","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/dbMatrix-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 dbMatrix class — dbMatrix-class","text":"dim_names row [1] col [2] names dims dimensions matrix","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/dbSparseMatrix-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 Class for dbSparseMatrix — dbSparseMatrix-class","title":"S4 Class for dbSparseMatrix — dbSparseMatrix-class","text":"Representation sparse matrices using -disk database. Inherits dbMatrix.","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/dot-check_con.html","id":null,"dir":"Reference","previous_headings":"","what":"Input validation for conn arg — .check_con","title":"Input validation for conn arg — .check_con","text":"Input validation conn arg","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/dot-check_con.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Input validation for conn arg — .check_con","text":"","code":".check_con(conn)"},{"path":"https://drieslab.github.io/dbMatrix/reference/dot-check_con.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Input validation for conn arg — .check_con","text":"conn tbl_duckdb_connection object","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/dot-check_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Input validation for name arg — .check_name","title":"Input validation for name arg — .check_name","text":"Input validation name arg","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/dot-check_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Input validation for name arg — .check_name","text":"","code":".check_name(name)"},{"path":"https://drieslab.github.io/dbMatrix/reference/dot-check_overwrite.html","id":null,"dir":"Reference","previous_headings":"","what":"Input validation for overwrite arg — .check_overwrite","title":"Input validation for overwrite arg — .check_overwrite","text":"Input validation overwrite arg","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/dot-check_overwrite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Input validation for overwrite arg — .check_overwrite","text":"","code":".check_overwrite(conn, overwrite, name)"},{"path":"https://drieslab.github.io/dbMatrix/reference/dot-check_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Input validation for data arg — .check_value","title":"Input validation for data arg — .check_value","text":"Input validation data arg","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/dot-check_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Input validation for data arg — .check_value","text":"","code":".check_value(value)"},{"path":"https://drieslab.github.io/dbMatrix/reference/dot-check_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Input validation for data arg — .check_value","text":"x Matrix, matrix, tbl_duckdb_connection object","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/flex_window_order.html","id":null,"dir":"Reference","previous_headings":"","what":"flex_window_order — flex_window_order","title":"flex_window_order — flex_window_order","text":"workaround multiple dbplyr window column ordering","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/flex_window_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"flex_window_order — flex_window_order","text":"","code":"flex_window_order(x, order_cols)"},{"path":"https://drieslab.github.io/dbMatrix/reference/flex_window_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"flex_window_order — flex_window_order","text":"x dbplyr::tbl_lazy order_cols character vector column names","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/get_MM_dim.html","id":null,"dir":"Reference","previous_headings":"","what":"get_MM_dim — get_MM_dim","title":"get_MM_dim — get_MM_dim","text":"Internal function read dimensions .mtx file","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/get_MM_dim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_MM_dim — get_MM_dim","text":"","code":"get_MM_dim(mtx_file_path)"},{"path":"https://drieslab.github.io/dbMatrix/reference/get_MM_dim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_MM_dim — get_MM_dim","text":"mtx_file_path path .mtx file read database","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/get_MM_dim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_MM_dim — get_MM_dim","text":"integer vector dimensions","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/get_MM_dim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_MM_dim — get_MM_dim","text":"Scans header mtx file (starting  representing dimensions number nonzero values. Note: header size can vary depending .mtx file.","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/get_MM_dimnames.html","id":null,"dir":"Reference","previous_headings":"","what":"get_MM_dimnames — get_MM_dimnames","title":"get_MM_dimnames — get_MM_dimnames","text":"Internal function read row column names .mtx file","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/get_MM_dimnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_MM_dimnames — get_MM_dimnames","text":"","code":"get_MM_dimnames(   mtx_file_path,   mtx_rowname_file_path,   mtx_rowname_col_idx = 1,   mtx_colname_file_path,   mtx_colname_col_idx = 1,   ... )"},{"path":"https://drieslab.github.io/dbMatrix/reference/get_MM_dimnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_MM_dimnames — get_MM_dimnames","text":"mtx_file_path path .mtx file read database mtx_rowname_file_path path .mtx rowname file read database. default, header assumed. mtx_rowname_col_idx column index row name file mtx_colname_file_path path .mtx colname file read database. default, header assumed. mtx_colname_col_idx column index column name file ... additional params pass data.table::fread","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/get_MM_dimnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_MM_dimnames — get_MM_dimnames","text":"list row column name character vectors","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/get_MM_dimnames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_MM_dimnames — get_MM_dimnames","text":"Can used read row column names .mtx files. Note: files must contain header (colnames). mtx_rowname_col_idx mtx_colname_col_idx can used specify column index row column name files, respectively. default, first column used . TODO: Support reading rownames colnames.","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/get_con.html","id":null,"dir":"Reference","previous_headings":"","what":"get_con — get_con","title":"get_con — get_con","text":"get_con","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/get_con.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_con — get_con","text":"","code":"get_con(dbMatrix)"},{"path":"https://drieslab.github.io/dbMatrix/reference/get_con.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_con — get_con","text":"dbMatrix","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/get_dbdir.html","id":null,"dir":"Reference","previous_headings":"","what":"get_dbdir — get_dbdir","title":"get_dbdir — get_dbdir","text":"get_dbdir","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/get_dbdir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_dbdir — get_dbdir","text":"","code":"get_dbdir(dbMatrix)"},{"path":"https://drieslab.github.io/dbMatrix/reference/get_dbdir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_dbdir — get_dbdir","text":"dbMatrix","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/get_tblName.html","id":null,"dir":"Reference","previous_headings":"","what":"get_tblName — get_tblName","title":"get_tblName — get_tblName","text":"get_tblName","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/get_tblName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_tblName — get_tblName","text":"","code":"get_tblName(dbMatrix)"},{"path":"https://drieslab.github.io/dbMatrix/reference/get_tblName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_tblName — get_tblName","text":"dbData","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/head-dbDataFrame-method.html","id":null,"dir":"Reference","previous_headings":"","what":"head — head,dbDataFrame-method","title":"head — head,dbDataFrame-method","text":"head","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/head-dbDataFrame-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"head — head,dbDataFrame-method","text":"","code":"# S4 method for class 'dbDataFrame' head(x, n = 6L, ...)"},{"path":"https://drieslab.github.io/dbMatrix/reference/head-dbMatrix-method.html","id":null,"dir":"Reference","previous_headings":"","what":"head — head,dbMatrix-method","title":"head — head,dbMatrix-method","text":"head","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/head-dbMatrix-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"head — head,dbMatrix-method","text":"","code":"# S4 method for class 'dbMatrix' head(x, n = 6L, ...)"},{"path":"https://drieslab.github.io/dbMatrix/reference/hidden_aliases.html","id":null,"dir":"Reference","previous_headings":"","what":"rowSums — [,dbData,missing,missing,missing-method","title":"rowSums — [,dbData,missing,missing,missing-method","text":"rowSums rowSums colSums colSums rowMeans rowMeans colMeans colMeans colSds colSds rowSds rowSds mean mean log Transpose nrow ncol ncol ncol dim","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/hidden_aliases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rowSums — [,dbData,missing,missing,missing-method","text":"","code":"# S4 method for class 'dbData,missing,missing,missing' x[i, j]  # S4 method for class 'dbData,missing,missing,ANY' x[i, j] <- value  # S4 method for class 'dbMatrix,dbIndex,missing,missing' x[i, j, ..., drop = TRUE]  # S4 method for class 'dbMatrix,missing,dbIndex,missing' x[i, j, ..., drop = TRUE]  # S4 method for class 'dbMatrix,dbIndex,dbIndex,missing' x[i, j, ..., drop = TRUE]  # S4 method for class 'dbDataFrame,dbIndex,missing,ANY' x[i, j, ..., drop = TRUE]  # S4 method for class 'dbDataFrame,missing,dbIndex,ANY' x[i, j, ..., drop = TRUE]  # S4 method for class 'dbDataFrame,dbIndex,dbIndex,ANY' x[i, j, ..., drop = FALSE]  # S4 method for class 'dbDataFrame,missing,missing,missing' x[i, j]  # S4 method for class 'dbDataFrame,missing,missing,ANY' x[i, j] <- value  # S4 method for class 'dbDataFrame' names(x)  # S4 method for class 'dbDataFrame,dbIndex' names(x) <- value  # S4 method for class 'dbData' rownames(x)  # S4 method for class 'dbMatrix' rownames(x)  # S4 method for class 'dbMatrix' rownames(x) <- value  # S4 method for class 'dbData' colnames(x)  # S4 method for class 'dbMatrix' colnames(x)  # S4 method for class 'dbMatrix,ANY' colnames(x) <- value  # S4 method for class 'dbDataFrame,dbIndex' colnames(x) <- value  # S4 method for class 'dbMatrix' dimnames(x)  # S4 method for class 'dbMatrix,list' dimnames(x) <- value  # S4 method for class 'dbDataFrame' dimnames(x)  # S4 method for class 'dbDataFrame,list' dimnames(x) <- value  # S4 method for class 'dbMatrix,ANY' Arith(e1, e2)  # S4 method for class 'ANY,dbMatrix' Arith(e1, e2)  # S4 method for class 'dbMatrix,dbMatrix' Arith(e1, e2)  # S4 method for class 'dbMatrix,ANY' Ops(e1, e2)  # S4 method for class 'ANY,dbMatrix' Ops(e1, e2)  # S4 method for class 'dbMatrix,dbMatrix' Ops(e1, e2)  # S4 method for class 'dbDenseMatrix' rowSums(x, ...)  # S4 method for class 'dbSparseMatrix' rowSums(x, ...)  # S4 method for class 'dbDenseMatrix' colSums(x, ...)  # S4 method for class 'dbSparseMatrix' colSums(x, ...)  # S4 method for class 'dbDenseMatrix' rowMeans(x, ...)  # S4 method for class 'dbSparseMatrix' rowMeans(x, ...)  # S4 method for class 'dbDenseMatrix' colMeans(x, ...)  # S4 method for class 'dbSparseMatrix' colMeans(x, ...)  # S4 method for class 'dbDenseMatrix' colSds(x, ...)  # S4 method for class 'dbSparseMatrix' colSds(x, ...)  # S4 method for class 'dbDenseMatrix' rowSds(x, ...)  # S4 method for class 'dbSparseMatrix' rowSds(x, ...)  # S4 method for class 'dbDenseMatrix' mean(x, ...)  # S4 method for class 'dbSparseMatrix' mean(x, ...)  # S4 method for class 'dbMatrix' log(x, ...)  # S4 method for class 'dbMatrix' t(x)  # S4 method for class 'dbDataFrame' nrow(x)  # S4 method for class 'dbMatrix' ncol(x)  # S4 method for class 'dbDataFrame' ncol(x)  # S4 method for class 'dbDataFrame' ncol(x)  # S4 method for class 'dbMatrix' dim(x)"},{"path":"https://drieslab.github.io/dbMatrix/reference/nrow.html","id":null,"dir":"Reference","previous_headings":"","what":"The number of rows/cols — nrow","title":"The number of rows/cols — nrow","text":"nrow ncol return number rows columns present x.","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/nrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The number of rows/cols — nrow","text":"","code":"# S4 method for class 'dbMatrix' nrow(x)"},{"path":"https://drieslab.github.io/dbMatrix/reference/precompute.html","id":null,"dir":"Reference","previous_headings":"","what":"Precompute a dbMatrix table in a database — precompute","title":"Precompute a dbMatrix table in a database — precompute","text":"Precomputes dbMatrix table specificied database connection. can speed operations involve breaking sparsity dbSparseMatrix, cases performing + - arithmetic operations. Need run .","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/precompute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Precompute a dbMatrix table in a database — precompute","text":"","code":"precompute(conn, m, n, name)"},{"path":"https://drieslab.github.io/dbMatrix/reference/precompute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Precompute a dbMatrix table in a database — precompute","text":"conn duckdb database connection m number rows precomputed dbMatrix table n number columns precomputed dbMatrix table name name precomputed dbMatrix table created","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/precompute.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Precompute a dbMatrix table in a database — precompute","text":"num_rows num_cols parameters must exceed maximum row column indices dbMatrix order used densifying dbMatrix. params less maximum row column indices precomputed densification process fail. cases, run function larger n_rows num_cols, manually remove precomputed table set options(dbMatrix.precomp = NULL) R console.","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/precompute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Precompute a dbMatrix table in a database — precompute","text":"","code":"con = DBI::dbConnect(duckdb::duckdb(), \":memory:\") precompute(con = con , m = 100, n = 100, name = \"precomputed_table\") #> Precomputed dbMatrix 'precomputed_table' with #> 100 rows and 100 columns"},{"path":"https://drieslab.github.io/dbMatrix/reference/print_array.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate array for pretty printing of matrix values — print_array","title":"Generate array for pretty printing of matrix values — print_array","text":"Generate array pretty printing matrix values","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/print_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate array for pretty printing of matrix values — print_array","text":"","code":"print_array(   i = NULL,   j = NULL,   x = NULL,   dims,   rownames = rep(\"\", dims[1]),   fill = \".\",   digits = 5L )"},{"path":"https://drieslab.github.io/dbMatrix/reference/print_array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate array for pretty printing of matrix values — print_array","text":", j, x matched vectors integers j, value x dims dimensions array (integer vector 2) fill fill character digits default = 5. numeric, round number digits","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/readMM.html","id":null,"dir":"Reference","previous_headings":"","what":"read_MM — readMM","title":"read_MM — readMM","text":"Read matrix market file (.mtx .mtx.gz)  database","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/readMM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read_MM — readMM","text":"","code":"readMM(con, value, name = \"dbMatrix\", overwrite = FALSE, ...)"},{"path":"https://drieslab.github.io/dbMatrix/reference/readMM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read_MM — readMM","text":"con DBI duckdb connection object (required) value path .mtx .mtx.gz file (required) name name assign file within database (optional). default: \"dbMatrix\" overwrite whether overwrite `name` already exists database. (required). default: FALSE ... additional params pass","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/readMM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read_MM — readMM","text":"tbl_dbi object","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/readMM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"read_MM — readMM","text":"Construct database VIEW .mtx .mtx.gz file columns '', 'j', 'x' representing row index, column index, value matrix, respectively. default '' 'j' type BIGINT 'x' type DOUBLE. Note: lack support R BIGINT may cause errors pulling data memory without proper type conversion. default, .mtx files expected contain two lines representing standard header information.","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/readMM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"read_MM — readMM","text":"","code":"print('TODO') #> [1] \"TODO\""},{"path":"https://drieslab.github.io/dbMatrix/reference/read_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"read_matrix — read_matrix","title":"read_matrix — read_matrix","text":"Read tabular matrix files database","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/read_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read_matrix — read_matrix","text":"","code":"read_matrix(con, value, name = \"dbMatrix\", overwrite = FALSE, ...)"},{"path":"https://drieslab.github.io/dbMatrix/reference/read_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read_matrix — read_matrix","text":"con DBI duckdb connection object (required) value path .txt, .csv, .tsv .gzip/.gz variants (required) name name assign file within database (optional). default: \"dbMatrix\" overwrite whether overwrite `name` already exists database. (required). default: FALSE ... additional params pass","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/read_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read_matrix — read_matrix","text":"tbl_dbi object","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/read_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"read_matrix — read_matrix","text":"Construct database VIEW .csv, .tsv, .txt files .gz/.gzip variants","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/read_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"read_matrix — read_matrix","text":"","code":"print('TODO') #> [1] \"TODO\""},{"path":"https://drieslab.github.io/dbMatrix/reference/save.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute or save a dbMatrix to disk — save","title":"Compute or save a dbMatrix to disk — save","text":"Compute save dbMatrix disk","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute or save a dbMatrix to disk — save","text":"","code":"save(dbMatrix, name = \"\", overwrite = FALSE, ...)"},{"path":"https://drieslab.github.io/dbMatrix/reference/save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute or save a dbMatrix to disk — save","text":"dbMatrix dbMatrix object name name table save disk overwrite whether overwrite table already exists database ... additional params pass description Saves dbMatrix table specified name dbMatrix connection. Note: Computing persist database \":memory:\".","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/save.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute or save a dbMatrix to disk — save","text":"may break functions rely existing table. TODO: sync dbMatrix constructor compute","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/save.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute or save a dbMatrix to disk — save","text":"","code":"dbm <- sim_dbSparseMatrix() #> Error in as(data, \"dgCMatrix\"): no method or default for coercing “matrix” to “dgCMatrix” compute(dbm, \"new_table\", overwrite = TRUE) #> Error in compute(dbm, \"new_table\", overwrite = TRUE): could not find function \"compute\""},{"path":"https://drieslab.github.io/dbMatrix/reference/simulate_objects.html","id":null,"dir":"Reference","previous_headings":"","what":"sim_dgc — sim_duckdb","title":"sim_dgc — sim_duckdb","text":"Simulate dbSparseMatrix memory Simulate dbDenseMatrix memory.","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/simulate_objects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sim_dgc — sim_duckdb","text":"","code":"sim_duckdb(value = datasets::iris, name = \"test\", con = NULL, memory = TRUE)  sim_dgc(num_rows = 50, num_cols = 50, n_vals = 50)  sim_denseMat(num_rows = 50, num_cols = 50)  sim_ijx_matrix(mat_type = NULL, num_rows = 50, num_cols = 50, seed_num = 42)  sim_dbDataFrame(value = NULL, name = \"df_test\", key = NA_character_)  sim_dbSparseMatrix(   num_rows = 50,   num_cols = 50,   seed_num = 42,   name = \"sparse_test\",   memory = FALSE )  sim_dbDenseMatrix(   num_rows = 50,   num_cols = 50,   seed_num = 42,   name = \"dense_test\",   memory = FALSE )"},{"path":"https://drieslab.github.io/dbMatrix/reference/simulate_objects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sim_dgc — sim_duckdb","text":"num_rows number rows matrix (default: 50) num_cols number columns matrix (default: 50) seed_num seed number reproducibility (default: 42)","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/simulate_objects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sim_dgc — sim_duckdb","text":"dgCMatrix object","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/simulate_objects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sim_dgc — sim_duckdb","text":"function generates simulated sparse matrix (dgCMatrix) number rows columns sets n_vals random values non-zero value. function generates simulated dense matrix object specified number rows columns. function generates ijx representation simulated dgCMatrix object specified number rows columns sets 50 random values non-zero value.","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/simulate_objects.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"sim_dgc — sim_duckdb","text":"sim_duckdb(): Simulate duckdb connection dplyr tbl_Pool memory sim_dgc(): Simulate dgcMatrix sim_denseMat(): Simulate dense matrix sim_ijx_matrix(): Simulate duckdb connection dplyr tbl_Pool memory sim_dbDataFrame(): Simulate dbDataFrame memory sim_dbSparseMatrix(): Simulate dbSparseMatrix memory sim_dbDenseMatrix(): Simulate dbDenseMatrix memory","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/simulate_objects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sim_dgc — sim_duckdb","text":"","code":"sim_ijx_matrix() #> Error in sim_ijx_matrix(): could not find function \"sim_ijx_matrix\""},{"path":"https://drieslab.github.io/dbMatrix/reference/tail-dbDataFrame-method.html","id":null,"dir":"Reference","previous_headings":"","what":"tail — tail,dbDataFrame-method","title":"tail — tail,dbDataFrame-method","text":"tail","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/tail-dbDataFrame-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tail — tail,dbDataFrame-method","text":"","code":"# S4 method for class 'dbDataFrame' tail(x, n = 6L, ...)"},{"path":"https://drieslab.github.io/dbMatrix/reference/tail-dbMatrix-method.html","id":null,"dir":"Reference","previous_headings":"","what":"tail — tail,dbMatrix-method","title":"tail — tail,dbMatrix-method","text":"tail","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/tail-dbMatrix-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tail — tail,dbMatrix-method","text":"","code":"# S4 method for class 'dbMatrix' tail(x, n = 6L, ...)"},{"path":"https://drieslab.github.io/dbMatrix/reference/toDbDense.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert dbSparseMatrix to dbDenseMatrix — toDbDense","title":"Convert dbSparseMatrix to dbDenseMatrix — toDbDense","text":"Convert dbSparseMatrix dbDenseMatrix.","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/toDbDense.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert dbSparseMatrix to dbDenseMatrix — toDbDense","text":"","code":"toDbDense(db_sparse)"},{"path":"https://drieslab.github.io/dbMatrix/reference/toDbDense.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert dbSparseMatrix to dbDenseMatrix — toDbDense","text":"db_sparse dbSparseMatrix object.","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/toDbDense.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert dbSparseMatrix to dbDenseMatrix — toDbDense","text":"","code":"TODO #> Error in eval(expr, envir, enclos): object 'TODO' not found"},{"path":"https://drieslab.github.io/dbMatrix/reference/to_ijx_disk.html","id":null,"dir":"Reference","previous_headings":"","what":"to_ijx_disk — to_ijx_disk","title":"to_ijx_disk — to_ijx_disk","text":"to_ijx_disk","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/to_ijx_disk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"to_ijx_disk — to_ijx_disk","text":"","code":"to_ijx_disk(con, name)"},{"path":"https://drieslab.github.io/dbMatrix/reference/to_ijx_disk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"to_ijx_disk — to_ijx_disk","text":"con duckdb connection name name table convert ijx disk","code":""},{"path":"https://drieslab.github.io/dbMatrix/reference/to_ijx_disk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"to_ijx_disk — to_ijx_disk","text":"remote table long format unpivoted wide format matrix","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"bug-fixes-0-0-0-9021","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbMatrix 0.0.0.9021 (2024-07-05)","text":"Improve show function dbDenseMatrix. Updated simulate functions include overwrite param. Update .check_overwrite() internal function avoid bug overwritting passed table.","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"features-0-0-0-9020","dir":"Changelog","previous_headings":"","what":"Features","title":"dbMatrix 0.0.0.9020 (2024-07-05)","text":"Add initial support reading .mtx files creating dbMatrix objects.","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"bug-fixes-0-0-0-9020","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbMatrix 0.0.0.9020 (2024-07-05)","text":"Update check_overwrite input validation","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"chore-0-0-0-9020","dir":"Changelog","previous_headings":"","what":"Chore","title":"dbMatrix 0.0.0.9020 (2024-07-05)","text":"Update Royxgen","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"features-0-0-0-9019","dir":"Changelog","previous_headings":"","what":"Features","title":"dbMatrix 0.0.0.9019 (2024-03-18)","text":"Add new precompute function speed matrix densification. Add new show function dbDenseMatrix pretty color better spacing. Add new save function save dbMatrix. Add new input validation functions.","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"chore-0-0-0-9019","dir":"Changelog","previous_headings":"","what":"Chore","title":"dbMatrix 0.0.0.9019 (2024-03-18)","text":"Update docs. Update imports include glue, bit64 crayon.","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"bug-fixes-0-0-0-9018","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbMatrix 0.0.0.9018 (2024-02-12)","text":"Update constructor calls sim functions. Remove redundant con constructor. Remove db_path constructor. Constructor db_path arg change con object.","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"features-0-0-0-9018","dir":"Changelog","previous_headings":"","what":"Features","title":"dbMatrix 0.0.0.9018 (2024-02-12)","text":"Add dgTMatrix -memory matrix types supported dbMatrix constructor.","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"chore-0-0-0-9018","dir":"Changelog","previous_headings":"","what":"Chore","title":"dbMatrix 0.0.0.9018 (2024-02-12)","text":"Set :memory: default db_path constructor. Update createDBMatrix docs.","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"documentation-0-0-0-9018","dir":"Changelog","previous_headings":"","what":"Documentation","title":"dbMatrix 0.0.0.9018 (2024-02-12)","text":"Spacing. Update constructor fix. Remove :temp: place :memory:.","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"bug-fixes-0-0-0-9017","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbMatrix 0.0.0.9017 (2024-02-07)","text":"Remove “:temp:” tests. Replace ‘:temp:’ ‘:memory:’. Add matrix addition dgCMatrix as_ijx().","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"features-0-0-0-9017","dir":"Changelog","previous_headings":"","what":"Features","title":"dbMatrix 0.0.0.9017 (2024-02-07)","text":"Add unit tests scalar arith. Add unit tests names.R.","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"chore-0-0-0-9017","dir":"Changelog","previous_headings":"","what":"Chore","title":"dbMatrix 0.0.0.9017 (2024-02-07)","text":"Remove random browser() call. Add MatrixGenerics deps. Update gitignore.","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"features-0-0-0-9016","dir":"Changelog","previous_headings":"","what":"Features","title":"dbMatrix 0.0.0.9016 (2024-01-23)","text":"Add boolean indexing tests test-extract.R. Add as_ijx() convenience function. Update createDBMatrix() use dplyr::copy_to(). Update as_matrix() convenience function. Add unit tests extract methods.","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"features-0-0-0-9015","dir":"Changelog","previous_headings":"","what":"Features","title":"dbMatrix 0.0.0.9015 (2024-01-22)","text":"Add log(). Update toDbDense use dplyr instead SQL.","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"chore-0-0-0-9015","dir":"Changelog","previous_headings":"","what":"Chore","title":"dbMatrix 0.0.0.9015 (2024-01-22)","text":"Update DESCRIPTION include testthat. Update docs.","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"features-0-0-0-9014","dir":"Changelog","previous_headings":"","what":"Features","title":"dbMatrix 0.0.0.9014 (2024-01-19)","text":"update dbIndex superclass update as_matrix()","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"bug-fixes-0-0-0-9013","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbMatrix 0.0.0.9013 (2024-01-18)","text":"Rename update dbIndex superclass fix indexing bugs.","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"features-0-0-0-9013","dir":"Changelog","previous_headings":"","what":"Features","title":"dbMatrix 0.0.0.9013 (2024-01-18)","text":"Add experimental as_matrix() convenience function.","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"chore-0-0-0-9013","dir":"Changelog","previous_headings":"","what":"Chore","title":"dbMatrix 0.0.0.9013 (2024-01-18)","text":"Update docs. Migrate site link drieslab. Move {Matrix} Imports.","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"documentation-0-0-0-9013","dir":"Changelog","previous_headings":"","what":"Documentation","title":"dbMatrix 0.0.0.9013 (2024-01-18)","text":"Update overview.Rmd. Update operations vignette.","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"bug-fixes-0-0-0-9012","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbMatrix 0.0.0.9012 (2023-12-08)","text":"densify necessary. != 0, +/-. toDbDense() previously updated table value. change update reference via VIEW creation table named ‘dense’.","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"features-0-0-0-9012","dir":"Changelog","previous_headings":"","what":"Features","title":"dbMatrix 0.0.0.9012 (2023-12-08)","text":"Add dbListTables().","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"chore-0-0-0-9012","dir":"Changelog","previous_headings":"","what":"Chore","title":"dbMatrix 0.0.0.9012 (2023-12-08)","text":"Update docs. Update gitignore.","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"bug-fixes-0-0-0-9011","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbMatrix 0.0.0.9011 (2023-12-08)","text":"Fix incorrect aggregate operations. Fixes con slot removal.","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"features-0-0-0-9011","dir":"Changelog","previous_headings":"","what":"Features","title":"dbMatrix 0.0.0.9011 (2023-12-08)","text":"Add get_con(). Add dbDisconnect() generic. Update accessors.","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"chore-0-0-0-9011","dir":"Changelog","previous_headings":"","what":"Chore","title":"dbMatrix 0.0.0.9011 (2023-12-08)","text":"Update vignettes. Update README. Update gitignore. Update docs. Update NEWS.","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"breaking-changes-0-0-0-9010","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"dbMatrix 0.0.0.9010 (2023-11-25)","text":"migrate |> pipe, remove %>%, update deps.","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"chore-0-0-0-9010","dir":"Changelog","previous_headings":"","what":"Chore","title":"dbMatrix 0.0.0.9010 (2023-11-25)","text":"Update docs.","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"bug-fixes-0-0-0-9009","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbMatrix 0.0.0.9009 (2023-11-20)","text":"Mean generic dbDenseMatrix.","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"chore-0-0-0-9009","dir":"Changelog","previous_headings":"","what":"Chore","title":"dbMatrix 0.0.0.9009 (2023-11-20)","text":"Update docs. Update site. Update gitignore.","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"bug-fixes-0-0-0-9008","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbMatrix 0.0.0.9008 (2023-11-17)","text":"Updates dbSparseMatrix rowMeans, colMeans. Updates colSums rowSums dbSparseMatrix. Update dbMatrix constructor dimnames issues.","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"chore-0-0-0-9008","dir":"Changelog","previous_headings":"","what":"Chore","title":"dbMatrix 0.0.0.9008 (2023-11-17)","text":"Update DESCRIPTION, remove redundant Matrix import, dep. Update docs. Update roxygen operations.","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"features-0-0-0-9007","dir":"Changelog","previous_headings":"","what":"Features","title":"dbMatrix 0.0.0.9007 (2023-11-09)","text":"Add Matrix dep.","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"bug-fixes-0-0-0-9006","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbMatrix 0.0.0.9006 (2023-11-09)","text":"Methods::scope correction.","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"features-0-0-0-9006","dir":"Changelog","previous_headings":"","what":"Features","title":"dbMatrix 0.0.0.9006 (2023-11-09)","text":"Add methods deps.","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"chore-0-0-0-9006","dir":"Changelog","previous_headings":"","what":"Chore","title":"dbMatrix 0.0.0.9006 (2023-11-09)","text":"Update .gitignore.","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"feat-0-0-0-9005","dir":"Changelog","previous_headings":"","what":"Feat","title":"dbMatrix 0.0.0.9005 (2023-11-09)","text":"Add Matrix pkg dep","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"bug-fixes-0-0-0-9004","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbMatrix 0.0.0.9004 (2023-11-09)","text":"Missing Matrix:: scope call.","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"chore-0-0-0-9004","dir":"Changelog","previous_headings":"","what":"Chore","title":"dbMatrix 0.0.0.9004 (2023-11-09)","text":"Update docs.","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"fix-0-0-0-9003","dir":"Changelog","previous_headings":"","what":"Fix","title":"dbMatrix 0.0.0.9003 (2023-11-07)","text":"dims dim_names createDBMatrix() retained -memory matrix Matrix object","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"chore-0-0-0-9003","dir":"Changelog","previous_headings":"","what":"Chore","title":"dbMatrix 0.0.0.9003 (2023-11-07)","text":"Update docs dbMatrix input checks","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"feat-0-0-0-9002","dir":"Changelog","previous_headings":"","what":"Feat","title":"dbMatrix 0.0.0.9002 (2023-11-07)","text":"Specify checks ‘name’ param createDBMatrix()","code":""},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"chore-0-0-0-9002","dir":"Changelog","previous_headings":"","what":"Chore","title":"dbMatrix 0.0.0.9002 (2023-11-07)","text":"Update docs. Add docs.","code":""},{"path":[]},{"path":"https://drieslab.github.io/dbMatrix/news/index.html","id":"chore-0-0-0-9001","dir":"Changelog","previous_headings":"","what":"Chore","title":"dbMatrix 0.0.0.9001 (2023-11-04)","text":"Update docs DESCRIPTION. Migration dbMatrix.","code":""}]
